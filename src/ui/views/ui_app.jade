extends ./chrome.jade

block content
  style.
    .loader-container {
      display: flex;
      align-items: center;
      justify-content: center;
      flex-flow: column nowrap;
      position: absolute;
      top: 0px;
      left: 0px;
      right: 0px;
      bottom: 0px;
      background-color: rgba(255, 255, 255, 0.5);
      user-select: none;
      cursor: default;
    }

    .loader-waiting {
      cursor: wait;
    }

    .loader {
      text-align: center;
      color: $b42;
    }

    .loader-loading {
      position: absolute;
      top: calc(50% - 3em);
      left: calc(50% - 3em);

      font-size: 10px;
      text-indent: -9999em;
      border-top: 0.3em solid #ff5000;
      border-right: 0.3em solid transparent;
      border-bottom: 0.3em solid #ff5000;
      border-left: 0.3em solid transparent;
      animation: loadSpinner 1s infinite linear;
      border-radius: 50%;
      width: 6em;
      height: 6em;

      &:after {
        border-radius: 50%;
        width: 6em;
        height: 6em;
      }
    }

    @keyframes loadSpinner {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }

  .kibanaWelcomeView
    //- .kibanaLoader
    //-   .kibanaLoader__logo
    //-     .kibanaWelcomeLogo
    //-   .kibanaLoader__content
    //-     | #{i18n('UI-WELCOME_MESSAGE')}

    .loader-container
      .loader
        .loader-loading

  script.
    const postMessageTarget = '#{kibanaPayload.postMessageTarget}';

    if (postMessageTarget) {
      var targetWindow;
      window.addEventListener('message', function(e) {
        if (e.origin !== postMessageTarget) {
          return;
        }

        targetWindow = e.source;
      }, false);

      window.onpopstate = function(e) {
        if (targetWindow && targetWindow.postMessage) {
          targetWindow.postMessage(window.location.hash, postMessageTarget);
        }
      }
    }

    window.onload = function () {
      var buildNum = #{kibanaPayload.buildNum};
      var cacheParam = buildNum ? '?v=' + buildNum : '';
      function bundleFile(filename) {
        var anchor = document.createElement('a');
        anchor.setAttribute('href', !{JSON.stringify(bundlePath)} + '/' + filename + cacheParam);
        return anchor.href;
      }
      var files = [
        bundleFile('commons.style.css'),
        bundleFile('#{app.id}.style.css'),
        bundleFile('commons.bundle.js'),
        bundleFile('#{app.id}.bundle.js')
      ];

      (function next() {
        var file = files.shift();
        if (!file) return;

        var failure = function () {
          // make subsequent calls to failure() noop
          failure = function () {};

          var err = document.createElement('h1');
          err.style['color'] = 'white';
          err.style['font-family'] = 'monospace';
          err.style['text-align'] = 'center';
          err.style['background'] = '#F44336';
          err.style['padding'] = '25px';
          err.innerText = '#{i18n('UI-WELCOME_ERROR')}';

          document.body.innerHTML = err.outerHTML;
        }

        var type = /\.js(\?.+)?$/.test(file) ? 'script' : 'link';
        var dom = document.createElement(type);
        dom.setAttribute('async', '');
        dom.addEventListener('error', failure);

        if (type === 'script') {
          dom.setAttribute('src', file);
          dom.addEventListener('load', next);
          document.head.appendChild(dom);
        } else {
          dom.setAttribute('rel', 'stylesheet');
          dom.setAttribute('href', file);
          document.head.appendChild(dom);
          next();
        }
      }());
    };
